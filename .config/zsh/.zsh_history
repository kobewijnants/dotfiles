ls
./deploy.sh
./deploy.sh
./deploy.sh
./deploy.sh
clear
./deploy.sh
clear
./deploy.sh
./deploy.sh
clear
./deploy.sh
clear
./deploy.sh
clear
./deploy.sh
git config --global credential.helper store\

fdsfds
fd
ls
./service.py
python3 service.py
cd portfolio-angular && ng serve
npm install -g @angular/cli
sudo npm install -g @angular/cli
ng new portfolio-angular --routing --style=scss
cd portfolio-angular && npm install @angular/material @angular/animations @fortawesome/angular-fontawesome @fortawesome/fontawesome-svg-core @fortawesome/free-brands-svg-icons @fortawesome/free-solid-svg-icons
ng generate component components/navbar && ng generate component components/hero && ng generate component components/about && ng generate component components/projects && ng generate component components/contact
ng generate component components/hero && ng generate component components/about && ng generate component components/skills && ng generate component components/projects && ng generate component components/contact
npm install -g @angular/cli
sudo npm install -g @angular/cli
ng new torrstream --routing --style=scss
cd torrstream && npm install @angular/material @angular/cdk webtorrent
ng generate component components/search && ng generate component components/player && ng generate service services/torrent
npm install --save-dev @types/webtorrent
npm install -g peerflix
sudo npm install -g peerflix
npm install --save-dev @types/node
npm install @angular/material
npm list @angular/material
npm list @angular/core
npm install @angular/material@latest
npm install @angular/animations
npm list @angular/animations
npm list @angular/platform-browser
npm install @angular/core@19.2.7 @angular/common@19.2.7 @angular/platform-browser@19.2.7 @angular/platform-browser-dynamic@19.2.7 @angular/forms@19.2.7 @angular/router@19.2.7 @angular/animations@19.2.7 @angular/material@19.2.7
npm install @angular/core@19.2.7 @angular/common@19.2.7 @angular/platform-browser@19.2.7 @angular/platform-browser-dynamic@19.2.7 @angular/forms@19.2.7 @angular/router@19.2.7 @angular/animations@19.2.7 @angular/material@19.2.7 --legacy-peer-deps
npm run start
mkdir -p backend/src
npm install socket.io-client
mkdir -p prowlarr/config prowlarr/downloads
docker-compose up --build
docker-compose up --build
docker-compose up --build
mkdir -p peerflix
mkdir -p frontend
docker-compose up --build
cd frontend
ng build
docker ps
docker-compose down && docker-compose build --no-cache frontend && docker-compose up -d
docker-compose down && docker-compose build --no-cache frontend && docker-compose up -d
docker-compose down && docker-compose build --no-cache frontend && docker-compose up -d
ng version
ng new jellyfin-angular --style=scss --routing=true --strict=true
cd jellyfin-angular && npm install @angular/material @angular/cdk @angular/animations @angular/flex-layout @angular/router @jellyfin/sdk
npm install @angular/material @angular/cdk @angular/animations @angular/router @jellyfin/sdk
ng generate module core && ng generate module shared && ng generate module features
ng generate component core/layout/main-layout && ng generate component core/layout/header && ng generate component core/layout/sidebar && ng generate component features/home && ng generate component features/library
ng serve --port 4201
ng serve --port 4201
ls
mv jellyfin-angular/* .
mv jellyfin-angular/.editorconfig .
mv jellyfin-angular/.gitignore .
mv jellyfin-angular/.vscode/ .
rmdir jellyfin-angular/
cleear
clear
npm install
ng serve
ng serve
ng serve
npm install
npm install && ng serve --port 4201
ng serve
mv row-stat/* .
mv row-stat/.editorconfig .
mv row-stat/.git/ .
mv row-stat/.gitignore .
mv row-stat/.vscode/ .
rmdir row-stat/
clear
ng serve
npm install
ng serve
ng serve
ng serve
ng serve
ng serve
ng serve
npm install --save-dev @types/papaparse
npm install @angular/animations
git init
git add .
git commit -m "Initial commit"
git branch -M main
git remote add origin https://github.com/kobewijnants/row-stat.git
git push -u origin main
